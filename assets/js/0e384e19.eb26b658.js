"use strict";(self.webpackChunkpy_tfhe_oss_doc=self.webpackChunkpy_tfhe_oss_doc||[]).push([[3976],{2053:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"intro","title":"PyTFHE Intro","description":"PyTFHE is an end-to-end compilation and execution framework for fully homomorphic encryption (FHE) applications.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/pytfhe/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Submodules","permalink":"/pytfhe/docs/category/submodules"}}');var r=t(4848),o=t(8453);const s={sidebar_position:1},c="PyTFHE Intro",a={},l=[{value:"Getting Started",id:"getting-started",level:2}];function d(e){const n={a:"a",br:"br",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"pytfhe-intro",children:"PyTFHE Intro"})}),"\n",(0,r.jsxs)(n.p,{children:["PyTFHE is an end-to-end compilation and execution framework for fully homomorphic encryption (FHE) applications.",(0,r.jsx)(n.br,{}),"\n","In particular, it focuses on the ",(0,r.jsx)(n.a,{href:"https://eprint.iacr.org/2018/421",children:"TFHE scheme"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["PyTFHE-OSS is the open-source version, optimized for clarity and usability.",(0,r.jsx)(n.br,{}),"\n","It is organized into multiple submodules that decouple the frontend (compilation and assembly) from the backend (execution on various platforms)."]}),"\n",(0,r.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,r.jsxs)(n.p,{children:["PyTFHE-OSS has been tested on Ubuntu 22.04 and RHEL 9/10.",(0,r.jsx)(n.br,{}),"\n","It consists of the following submodules, which we recommend exploring and installing in the order listed:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/jiaaom/pyTFHE-CPU",children:"CPU Engine"}),": CPU execution backend."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/jiaaom/pyTFHE-CUDA",children:"CUDA Engine"}),": CUDA execution backend."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/jiaaom/pyTFHE-rs",children:"PyTFHE-rs"}),": Support library for graph construction, IR support, and scheduling."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/jiaaom/pyTFHE-Frontend",children:"Frontend"}),": Frontend for compilation, scheduling, and integration with execution engines."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/jiaaom/chisel-torch",children:"ChiselTorch"}),": A Chisel implementation of a PyTorch-like interface for accelerator generation."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/jiaaom/pyTFHE-Benchmarks",children:"Benchmarks"}),": Optional benchmark suite for performance testing."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var i=t(6540);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);