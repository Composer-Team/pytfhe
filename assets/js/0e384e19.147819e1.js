"use strict";(self.webpackChunkpy_tfhe_oss_doc=self.webpackChunkpy_tfhe_oss_doc||[]).push([[3976],{2053:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"intro","title":"PyTFHE Intro","description":"PyTFHE is an end-to-end compilation and execution framework for fully homomorphic encryption (FHE) applications.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/pytfhe/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Submodules","permalink":"/pytfhe/docs/category/submodules"}}');var o=t(4848),i=t(8453);const r={sidebar_position:1},c="PyTFHE Intro",a={},d=[{value:"Getting Started",id:"getting-started",level:2}];function l(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"pytfhe-intro",children:"PyTFHE Intro"})}),"\n",(0,o.jsx)(n.p,{children:"PyTFHE is an end-to-end compilation and execution framework for fully homomorphic encryption (FHE) applications.\nSpecifically, we use the FHE over the Torus (TFHE) scheme [CITE] as our main focus."}),"\n",(0,o.jsx)(n.p,{children:"PyTFHE-OSS is the open-source version that optimized for cleaness and usability.\nIt consists of multiple submodules that decouples the frontend (compilation and assemble) and backend (execution on various platforms)."}),"\n",(0,o.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,o.jsx)(n.p,{children:"PyTFHE-OSS has been tested under Ubuntu 22.04 and RHEL9.\nIt consists of the following submodules:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://github.com/jiaaom/pyTFHE-CPU",children:"CPU Engine"})," is the CPU execution backend."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://github.com/jiaaom/pyTFHE-CUDA",children:"CUDA Engine"})," is the CUDA execution backend."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://github.com/jiaaom/pyTFHE-rs",children:"PyTFHE-rs"})," contains the support library for building graphs, IR support, and scheduler."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://github.com/jiaaom/pyTFHE-Frontend",children:"Frontend"})," is the frontend for compilation, scheduler, and execution engines."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://github.com/jiaaom/pyTFHE-Benchmarks",children:"Benchmarks"})," contains some optional benchmarks used for performance testing."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://github.com/jiaaom/chisel-torch",children:"ChiselTorch"})," is a Chisel implementation of a PyTorch-Like Interface for Accelerator Generation."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(6540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);