"use strict";(self.webpackChunkpy_tfhe_oss_doc=self.webpackChunkpy_tfhe_oss_doc||[]).push([[5760],{8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var s=t(6540);const i={},r=s.createContext(i);function l(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(r.Provider,{value:n},e.children)}},9926:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"submodules/pytfhe-cpu","title":"PyTFHE-CPU","description":"Overview","source":"@site/docs/submodules/pytfhe-cpu.md","sourceDirName":"submodules","slug":"/submodules/pytfhe-cpu","permalink":"/pytfhe/docs/submodules/pytfhe-cpu","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/submodules/pytfhe-cpu.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Submodules","permalink":"/pytfhe/docs/category/submodules"},"next":{"title":"AIGER Tools","permalink":"/pytfhe/docs/submodules/aiger-tools"}}');var i=t(4848),r=t(8453);const l={sidebar_position:1},o="PyTFHE-CPU",a={},c=[{value:"Overview",id:"overview",level:2},{value:"Installation Guide",id:"installation-guide",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Clone the Repository",id:"clone-the-repository",level:3},{value:"Install the Package",id:"install-the-package",level:3},{value:"Usage Guide",id:"usage-guide",level:2},{value:"Serialization",id:"serialization",level:3},{value:"Key Generation Functions",id:"key-generation-functions",level:3},{value:"Encryption / Decryption",id:"encryption--decryption",level:3},{value:"Homomorphic Boolean Gates",id:"homomorphic-boolean-gates",level:3},{value:"Basic Gates",id:"basic-gates",level:4},{value:"Extended Gates",id:"extended-gates",level:4},{value:"Compound Gates",id:"compound-gates",level:4},{value:"Look-Up Table",id:"look-up-table",level:4},{value:"Memory Management",id:"memory-management",level:3},{value:"Deletion Functions",id:"deletion-functions",level:4},{value:"Example Usage",id:"example-usage",level:4}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"pytfhe-cpu",children:"PyTFHE-CPU"})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.p,{children:"This submodule provides the Python binding for executing Boolean TFHE programs on CPU."}),"\n",(0,i.jsxs)(n.p,{children:["The original C implementation is based on ",(0,i.jsx)(n.a,{href:"https://github.com/tfhe/tfhe",children:"libtfhe"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"This submodule can be used standalone as low-level APIs for TFHE program developers, and it is also required by other modules in PyTFHE."}),"\n",(0,i.jsx)(n.h2,{id:"installation-guide",children:"Installation Guide"}),"\n",(0,i.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"clang"})," (",(0,i.jsx)(n.code,{children:"clang-15"})," tested)"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"clone-the-repository",children:"Clone the Repository"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/jiaaom/pyTFHE-CPU\ncd pyTFHE-CPU\n"})}),"\n",(0,i.jsx)(n.h3,{id:"install-the-package",children:"Install the Package"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip install .\n"})}),"\n",(0,i.jsx)(n.p,{children:"Expected output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Successfully installed pyTFHE-0.9\n"})}),"\n",(0,i.jsx)(n.h2,{id:"usage-guide",children:"Usage Guide"}),"\n",(0,i.jsx)(n.h3,{id:"serialization",children:"Serialization"}),"\n",(0,i.jsx)(n.p,{children:"Supports Python pickling for distributed computing:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import pickle\nct = LweSample(params)\n# Serialize\ndata = pickle.dumps(ct)\n# Deserialize\nct_restored = pickle.loads(data)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"key-generation-functions",children:"Key Generation Functions"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"params = pyTFHE.new_default_gate_bootstrapping_parameters(110)\nsk = pyTFHE.new_random_gate_bootstrapping_secret_keyset(params)\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"new_default_gate_bootstrapping_parameters(minimum_lambda: int)"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Generate default secure parameters for gate bootstrapping."}),"\n",(0,i.jsxs)(n.li,{children:["Parameters:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"minimum_lambda (int)"}),": Security parameter (typically 110 or 128)"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Returns: ",(0,i.jsx)(n.code,{children:"TFheGateBootstrappingParameterSet"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"new_random_gate_bootstrapping_secret_keyset(params)"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Generate a random secret key set."}),"\n",(0,i.jsxs)(n.li,{children:["Parameters:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"params (TFheGateBootstrappingParameterSet)"}),": Parameter set"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Returns: ",(0,i.jsx)(n.code,{children:"TFheGateBootstrappingSecretKeySet"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"encryption--decryption",children:"Encryption / Decryption"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"ct = pyTFHE.new_gate_bootstrapping_ciphertext(params)\npyTFHE.bootsSymEncrypt(ct, 1, sk)\nbit = pyTFHE.bootsSymDecrypt(ct, sk)\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"new_gate_bootstrapping_ciphertext(params)"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Create a new uninitialized ciphertext."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"bootsSymEncrypt(ciphertext, plaintext, secret_key)"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Encrypt a bit using symmetric encryption."}),"\n",(0,i.jsxs)(n.li,{children:["Parameters:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ciphertext (LweSample)"}),": Output ciphertext"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"plaintext (int)"}),": Bit to encrypt (0 or 1)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"secret_key (TFheGateBootstrappingSecretKeySet)"}),": Secret key"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"bootsSymDecrypt(ciphertext, secret_key)"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Decrypt a ciphertext to recover the bit."}),"\n",(0,i.jsxs)(n.li,{children:["Returns: ",(0,i.jsx)(n.code,{children:"int"})," (0 or 1)"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"homomorphic-boolean-gates",children:"Homomorphic Boolean Gates"}),"\n",(0,i.jsx)(n.p,{children:"All gate functions perform homomorphic operations on encrypted bits."}),"\n",(0,i.jsx)(n.h4,{id:"basic-gates",children:"Basic Gates"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"pyTFHE.bootsAND(result, input1, input2, cloud_key)\npyTFHE.bootsOR(result, input1, input2, cloud_key)\npyTFHE.bootsXOR(result, input1, input2, cloud_key)\npyTFHE.bootsNOT(result, input, cloud_key)\npyTFHE.bootsNAND(result, input1, input2, cloud_key)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"extended-gates",children:"Extended Gates"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"pyTFHE.bootsNOR(result, input1, input2, cloud_key)\npyTFHE.bootsXNOR(result, input1, input2, cloud_key)\npyTFHE.bootsCOPY(result, input, cloud_key)\npyTFHE.bootsMUX(result, input1, input2, input3, cloud_key)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"compound-gates",children:"Compound Gates"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"pyTFHE.bootsANDYN(result, input1, input2, cloud_key)\npyTFHE.bootsANDNY(result, input1, input2, cloud_key)\npyTFHE.bootsORYN(result, input1, input2, cloud_key)\npyTFHE.bootsORNY(result, input1, input2, cloud_key)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"look-up-table",children:"Look-Up Table"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"lut_value = 0b1000  # AND function\npyTFHE.lut2(lut_value, result, input1, input2, cloud_key)\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"lut2(lut_value, result, input1, input2, bootstrapping_key)"})," evaluates a 2-input lookup table homomorphically."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"memory-management",children:"Memory Management"}),"\n",(0,i.jsx)(n.h4,{id:"deletion-functions",children:"Deletion Functions"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"pyTFHE.delete_gate_bootstrapping_ciphertext(ct)\npyTFHE.delete_gate_bootstrapping_secret_keyset(sk)\npyTFHE.delete_gate_bootstrapping_cloud_keyset(bk)\npyTFHE.delete_gate_bootstrapping_parameters(params)\n"})}),"\n",(0,i.jsx)(n.h4,{id:"example-usage",children:"Example Usage"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import pyTFHE as tfhe\n\n# Setup\nparams = tfhe.new_default_gate_bootstrapping_parameters(110)\nsk = tfhe.new_random_gate_bootstrapping_secret_keyset(params)\ncloud_key = sk.cloud\n\n# Create ciphertexts\nct1 = tfhe.new_gate_bootstrapping_ciphertext(params)\nct2 = tfhe.new_gate_bootstrapping_ciphertext(params)\nresult = tfhe.new_gate_bootstrapping_ciphertext(params)\n\n# Encrypt bits\ntfhe.bootsSymEncrypt(ct1, 1, sk)\ntfhe.bootsSymEncrypt(ct2, 0, sk)\n\n# Homomorphic AND operation\ntfhe.bootsAND(result, ct1, ct2, cloud_key)\n\n# Decrypt result\noutput = tfhe.bootsSymDecrypt(result, sk)\nprint(f"1 AND 0 = {output}")  # Should print 0\n\n# Cleanup\ntfhe.delete_gate_bootstrapping_ciphertext(ct1)\ntfhe.delete_gate_bootstrapping_ciphertext(ct2)\ntfhe.delete_gate_bootstrapping_ciphertext(result)\ntfhe.delete_gate_bootstrapping_secret_keyset(sk)\ntfhe.delete_gate_bootstrapping_parameters(params)\n'})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);